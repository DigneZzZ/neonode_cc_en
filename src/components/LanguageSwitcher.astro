---
import {
    getLangFromUrl,
    getLocalizedUrl,
    type SupportedLanguage,
} from "src/utils/i18n";

// Определяем текущий язык
let currentLanguage = getLangFromUrl(Astro.url) ?? 'ru';

// Определяем целевой язык
const targetLanguage = currentLanguage === 'en' ? 'ru' : 'en';

// Текст для ссылки
const languageText = currentLanguage === 'en' ? 'Читать на Русском' : 'Read in English';

// Генерация URL для целевого языка
const localizedUrl = getLocalizedUrl(Astro.url, targetLanguage as SupportedLanguage);
---

<div class="language-switcher">
  <a href={localizedUrl}>{languageText}</a>
</div>

<style>
  .language-switcher {
      margin-bottom: 2rem; /* Увеличенный нижний отступ */
  }

  .language-switcher a {
      padding: 0.5em 1em;
      border-radius: 8px;
      font-weight: bold;
      text-decoration: none;
      border: 2px solid;
      position: relative;
      overflow: hidden;
      display: inline-block;
      animation: blink-border 1.5s steps(2, start) infinite; /* Анимация мигания */
  }

  /* Светлая тема */
  @media (prefers-color-scheme: light) {
      .language-switcher a {
          background-color: #f2f2f2;
          color: #333;
          border-color: #ddd;
      }

      .language-switcher a:hover {
          background-color: #e0e0e0;
          color: #000;
      }
  }

  /* Темная тема */
  @media (prefers-color-scheme: dark) {
      .language-switcher a {
          background-color: #333;
          color: #f2f2f2;
          border-color: #444;
      }

      .language-switcher a:hover {
          background-color: #444;
          color: #fff;
      }
  }

  /* Мигание рамки */
  @keyframes blink-border {
      0%, 100% {
          border-color: #26785c; /* Основной цвет мигающей рамки */
      }
      50% {
          border-color: transparent; /* Прозрачность для эффекта мигания */
      }
  }
</style>
